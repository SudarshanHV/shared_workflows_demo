# .github/workflows/coverage_collection_template.yml
# ================================
# Coverage Collection Workflow Template
# --------------------------------

name: Coverage Collection

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# ====== USER: Fill in the following values ======
# APP_NAME:            The name of your application (for display/logging)
# TEST_COMMAND:        The command to run your tests (e.g. "npm test")
# SONAR_PROJECT_KEY:   Your SonarQube project key
# SONAR_HOST_URL:      Your SonarQube instance URL (e.g. https://sonarcloud.io)
# SONAR_ORGANIZATION:  Your SonarQube organization key
# SONAR_TOKEN:         Save your SonarQube token in GitHub Secrets as SONAR_TOKEN

env:
  APP_NAME:            "REPLACE_WITH_APP_NAME"
  TEST_COMMAND:        "REPLACE_WITH_TEST_COMMAND"        # e.g. "npm test"
  SONAR_PROJECT_KEY:   "REPLACE_WITH_SONAR_PROJECT_KEY"
  SONAR_HOST_URL:      "REPLACE_WITH_SONAR_HOST_URL"
  SONAR_ORGANIZATION:  "REPLACE_WITH_SONAR_ORGANIZATION"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Verify Java version
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          java -version
          which java
      
      - name: Setup coverage
        run: |
          if [ -f "package.json" ]; then
            # Install nyc if not present and no other coverage tool detected
            if ! npm list jest nyc vitest --depth=0 > /dev/null 2>&1; then
              npm install --save-dev nyc
              export TEST_CMD="npx nyc --reporter=lcov ${{ env.TEST_COMMAND }}"
            else
              export TEST_CMD="${{ env.TEST_COMMAND }}"
            fi
            echo "FINAL_TEST_COMMAND=$TEST_CMD" >> $GITHUB_ENV
          fi

      - name: Run tests for ${{ env.APP_NAME }}
        run: ${FINAL_TEST_COMMAND:-${{ env.TEST_COMMAND }}}

      - name: Upload Coverage to SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Using Java: $JAVA_HOME"
          $JAVA_HOME/bin/java -version
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          
          # Override the Java detection in sonar-scanner
          sed -i "s|#use_embedded_jre=true|use_embedded_jre=false|g" sonar-scanner-4.8.0.2856-linux/conf/sonar-scanner.properties
          
          # Force Java 17 by updating PATH and running with explicit JAVA_HOME
          export PATH="$JAVA_HOME/bin:$PATH"
          export JAVA_HOME=$JAVA_HOME
          
          $JAVA_HOME/bin/java -jar $(pwd)/sonar-scanner-4.8.0.2856-linux/lib/sonar-scanner-cli-4.8.0.2856.jar \
            -X \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}

      - name: Build success
        run: echo "${{ env.APP_NAME }} built successfully!"